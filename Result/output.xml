<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.12.1 on win32)" generated="2024-03-12T20:53:21.773414" rpa="false" schemaversion="5">
<suite id="s1" name="Run Full" source="E:\PycharmProjects\trainingAuto\run_full.robot">
<test id="s1-t1" name="Simple Follow" line="32">
<kw name="Open App Todoist">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://192.168.1.201:4723</arg>
<arg>platformName=Android</arg>
<arg>appium:appPackage=com.todoist</arg>
<arg>appium:appActivity=com.todoist.alias.HomeActivityDefault</arg>
<arg>appium:automationName=UiAutomator2</arg>
<arg>appium:noReset=false</arg>
<arg>appium:allowPermission=true</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/server-args.md
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-03-12T20:53:21.996526" elapsed="9.192919"/>
</kw>
<status status="PASS" start="2024-03-12T20:53:21.995528" elapsed="9.193917"/>
</kw>
<kw name="Signing With Email By Data">
<kw name="Common - Click Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:53:33.315003" level="INFO">criteria is com.todoist:id/more_sign_in_options</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:53:31.190448" elapsed="2.124555"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-03-12T20:53:33.317024" level="INFO">Clicking element 'com.todoist:id/more_sign_in_options'.</msg>
<msg time="2024-03-12T20:53:33.433899" level="INFO">criteria is com.todoist:id/more_sign_in_options</msg>
<arg>${element_locator}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:53:33.315003" elapsed="0.118896"/>
</kw>
<arg>${btn_more_signin_options}</arg>
<status status="PASS" start="2024-03-12T20:53:31.190448" elapsed="2.243451"/>
</kw>
<kw name="Common - Click Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:53:34.568300" level="INFO">criteria is com.todoist:id/email_login</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:53:33.434900" elapsed="1.133400"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-03-12T20:53:34.570267" level="INFO">Clicking element 'com.todoist:id/email_login'.</msg>
<msg time="2024-03-12T20:53:34.707044" level="INFO">criteria is com.todoist:id/email_login</msg>
<arg>${element_locator}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:53:34.569270" elapsed="0.137774"/>
</kw>
<arg>${btn_signin_by_email}</arg>
<status status="PASS" start="2024-03-12T20:53:33.434900" elapsed="1.272144"/>
</kw>
<kw name="Common - Input Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:53:36.850767" level="INFO">xpath criteria: //android.widget.EditText[@resource-id="email"]</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:53:34.707044" elapsed="2.143723"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:53:36.851761" level="INFO">Typing text 'duc.hoc.automation@gmail.com' into text field '//android.widget.EditText[@resource-id="email"]'</msg>
<msg time="2024-03-12T20:53:36.983412" level="INFO">xpath criteria: //android.widget.EditText[@resource-id="email"]</msg>
<arg>${element_locator}</arg>
<arg>${data_input}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:53:36.850767" elapsed="0.132645"/>
</kw>
<arg>${inp_signin_form_email}</arg>
<arg>${data_username}</arg>
<status status="PASS" start="2024-03-12T20:53:34.707044" elapsed="2.276368"/>
</kw>
<kw name="Common - Input Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:53:37.127596" level="INFO">xpath criteria: //android.widget.EditText[@resource-id="password"]</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:53:36.984406" elapsed="0.143190"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:53:37.129591" level="INFO">Typing text '123456zz' into text field '//android.widget.EditText[@resource-id="password"]'</msg>
<msg time="2024-03-12T20:53:37.255508" level="INFO">xpath criteria: //android.widget.EditText[@resource-id="password"]</msg>
<arg>${element_locator}</arg>
<arg>${data_input}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:53:37.127596" elapsed="0.127912"/>
</kw>
<arg>${inp_signin_form_password}</arg>
<arg>${data_password}</arg>
<status status="PASS" start="2024-03-12T20:53:36.983412" elapsed="0.272096"/>
</kw>
<kw name="Common - Click Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:53:37.430945" level="INFO">xpath criteria: //android.view.View[@resource-id="auth_button_tag"]</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:53:37.256267" elapsed="0.174678"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-03-12T20:53:37.431937" level="INFO">Clicking element '//android.view.View[@resource-id="auth_button_tag"]'.</msg>
<msg time="2024-03-12T20:53:37.596420" level="INFO">xpath criteria: //android.view.View[@resource-id="auth_button_tag"]</msg>
<arg>${element_locator}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:53:37.430945" elapsed="0.165475"/>
</kw>
<arg>${btn_signin}</arg>
<status status="PASS" start="2024-03-12T20:53:37.256016" elapsed="0.340404"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-12T20:53:42.597498" level="INFO">Slept 5 seconds.</msg>
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-12T20:53:37.596420" elapsed="5.001078"/>
</kw>
<kw name="Hide Keyboard" owner="AppiumLibrary">
<doc>Hides the software keyboard on the device. (optional) In iOS, use `key_name` to press
a particular key, ex. `Done`. In Android, no parameters are used.</doc>
<status status="PASS" start="2024-03-12T20:53:42.597498" elapsed="3.571532"/>
</kw>
<kw name="Common - Press Back Button">
<kw name="Press Keycode" owner="AppiumLibrary">
<arg>4</arg>
<doc>Sends a press of keycode to the device.</doc>
<status status="PASS" start="2024-03-12T20:53:46.169030" elapsed="0.970380"/>
</kw>
<status status="PASS" start="2024-03-12T20:53:46.169030" elapsed="0.970380"/>
</kw>
<arg>${user}</arg>
<arg>${password}</arg>
<status status="PASS" start="2024-03-12T20:53:31.189445" elapsed="15.949965"/>
</kw>
<kw name="Add Task">
<kw name="Common - Click Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:17.343940" level="INFO">&lt;?xml version='1.0' encoding='UTF-8' standalone='yes' ?&gt;
&lt;hierarchy index="0" class="hierarchy" rotation="0" width="1080" height="2138"&gt;
  &lt;android.widget.FrameLayout index="0" package="com.google.android.apps.nexuslauncher" class="android.widget.FrameLayout" text="" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[0,0][1080,2400]" displayed="true"&gt;
    &lt;android.widget.LinearLayout index="0" package="com.google.android.apps.nexuslauncher" class="android.widget.LinearLayout" text="" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[0,0][1080,2400]" displayed="true"&gt;
      &lt;android.widget.FrameLayout index="0" package="com.google.android.apps.nexuslauncher" class="android.widget.FrameLayout" text="" resource-id="android:id/content" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[0,0][1080,2400]" displayed="true"&gt;
        &lt;android.widget.FrameLayout index="0" package="com.google.android.apps.nexuslauncher" class="android.widget.FrameLayout" text="" resource-id="com.google.android.apps.nexuslauncher:id/launcher" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[0,0][1080,2400]" displayed="true"&gt;
          &lt;android.widget.FrameLayout index="0" package="com.google.android.apps.nexuslauncher" class="android.widget.FrameLayout" text="" resource-id="com.google.android.apps.nexuslauncher:id/drag_layer" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[0,0][1080,2400]" displayed="true"&gt;
            &lt;android.view.View index="0" package="com.google.android.apps.nexuslauncher" class="android.view.View" text="" resource-id="com.google.android.apps.nexuslauncher:id/scrim_view" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[0,0][1080,2400]" displayed="true"&gt;
              &lt;android.view.View index="0" package="com.google.android.apps.nexuslauncher" class="android.view.View" text="" content-desc="Apps list" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[517,1794][564,1810]" displayed="true" /&gt;
            &lt;/android.view.View&gt;
            &lt;android.widget.RelativeLayout index="1" package="com.google.android.apps.nexuslauncher" class="android.widget.RelativeLayout" text="" resource-id="com.google.android.apps.nexuslauncher:id/apps_view" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[0,0][1080,2400]" displayed="true"&gt;
              &lt;androidx.recyclerview.widget.RecyclerView index="0" package="com.google.android.apps.nexuslauncher" class="androidx.recyclerview.widget.RecyclerView" text="" resource-id="com.google.android.apps.nexuslauncher:id/apps_list_view" checkable="false" checked="false" clickable="false" enabled="true" focusable="true" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[0,230][1080,2400]" displayed="true"&gt;
                &lt;android.widget.TextView index="0" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Appium Settings" content-desc="Appium Settings" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[35,325][237,649]" displayed="true" /&gt;
                &lt;android.widget.TextView index="1" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Calendar" content-desc="Calendar" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[237,325][439,649]" displayed="true" /&gt;
                &lt;android.widget.TextView index="2" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Camera" content-desc="Camera" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[439,325][641,649]" displayed="true" /&gt;
                &lt;android.widget.TextView index="3" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Chrome" content-desc="Chrome" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[641,325][843,649]" displayed="true" /&gt;
                &lt;android.widget.TextView index="4" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Clock" content-desc="Clock" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[843,325][1045,649]" displayed="true" /&gt;
                &lt;android.widget.TextView index="5" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Contacts" content-desc="Contacts" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[35,649][237,973]" displayed="true" /&gt;
                &lt;android.widget.TextView index="6" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Drive" content-desc="Drive" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[237,649][439,973]" displayed="true" /&gt;
                &lt;android.widget.TextView index="7" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Duo" content-desc="Duo" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[439,649][641,973]" displayed="true" /&gt;
                &lt;android.widget.TextView index="8" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Files" content-desc="Files" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[641,649][843,973]" displayed="true" /&gt;
                &lt;android.widget.TextView index="9" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Gmail" content-desc="Gmail" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[843,649][1045,973]" displayed="true" /&gt;
                &lt;android.widget.TextView index="10" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Google" content-desc="Google" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[35,973][237,1297]" displayed="true" /&gt;
                &lt;android.widget.TextView index="11" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Maps" content-desc="Maps" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[237,973][439,1297]" displayed="true" /&gt;
                &lt;android.widget.TextView index="12" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Messages" content-desc="Messages" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[439,973][641,1297]" displayed="true" /&gt;
                &lt;android.widget.TextView index="13" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Phone" content-desc="Phone" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[641,973][843,1297]" displayed="true" /&gt;
                &lt;android.widget.TextView index="14" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Photos" content-desc="Photos" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[843,973][1045,1297]" displayed="true" /&gt;
                &lt;android.widget.TextView index="15" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Play Movies &amp;amp; TV" content-desc="Play Movies &amp;amp; TV" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[35,1297][237,1621]" displayed="true" /&gt;
                &lt;android.widget.TextView index="16" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Play Store" content-desc="Play Store" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[237,1297][439,1621]" displayed="true" /&gt;
                &lt;android.widget.TextView index="17" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Settings" content-desc="Settings" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[439,1297][641,1621]" displayed="true" /&gt;
                &lt;android.widget.TextView index="18" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="Todoist" content-desc="Todoist, has 1 notification" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[641,1297][843,1621]" displayed="true" /&gt;
                &lt;android.widget.TextView index="19" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="WebView Browser Tester" content-desc="WebView Browser Tester" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[843,1297][1045,1621]" displayed="true" /&gt;
                &lt;android.widget.TextView index="20" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="YouTube" content-desc="YouTube" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[35,1621][237,1945]" displayed="true" /&gt;
                &lt;android.widget.TextView index="21" package="com.google.android.apps.nexuslauncher" class="android.widget.TextView" text="YT Music" content-desc="YT Music" resource-id="com.google.android.apps.nexuslauncher:id/icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[237,1621][439,1945]" displayed="true" /&gt;
              &lt;/androidx.recyclerview.widget.RecyclerView&gt;
              &lt;android.widget.LinearLayout index="1" package="com.google.android.apps.nexuslauncher" class="android.widget.LinearLayout" text="" resource-id="com.google.android.apps.nexuslauncher:id/all_apps_header" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[0,230][1080,325]" displayed="true" /&gt;
              &lt;android.widget.FrameLayout index="2" package="com.google.android.apps.nexuslauncher" class="android.widget.FrameLayout" text="" content-desc="Search" resource-id="com.google.android.apps.nexuslauncher:id/search_container_all_apps" checkable="false" checked="false" clickable="true" enabled="true" focusable="true" focused="false" long-clickable="true" password="false" scrollable="false" selected="false" bounds="[54,162][1025,309]" displayed="true"&gt;
                &lt;android.widget.ImageView index="0" package="com.google.android.apps.nexuslauncher" class="android.widget.ImageView" text="" resource-id="com.google.android.apps.nexuslauncher:id/g_icon" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[104,204][167,267]" displayed="true" /&gt;
                &lt;android.view.View index="2" package="com.google.android.apps.nexuslauncher" class="android.view.View" text="" content-desc="Voice search" resource-id="com.google.android.apps.nexuslauncher:id/mic_icon" checkable="false" checked="false" clickable="true" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[870,162][1017,309]" displayed="true" /&gt;
              &lt;/android.widget.FrameLayout&gt;
              &lt;android.view.View index="4" package="com.google.android.apps.nexuslauncher" class="android.view.View" text="" resource-id="com.google.android.apps.nexuslauncher:id/fast_scroller" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" long-clickable="false" password="false" scrollable="false" selected="false" bounds="[996,230][1080,2400]" displayed="true" /&gt;
            &lt;/android.widget.RelativeLayout&gt;
          &lt;/android.widget.FrameLayout&gt;
        &lt;/android.widget.FrameLayout&gt;
      &lt;/android.widget.FrameLayout&gt;
    &lt;/android.widget.LinearLayout&gt;
  &lt;/android.widget.FrameLayout&gt;
&lt;/hierarchy&gt;</msg>
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:17.698249" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2024-03-12T20:54:17.350411" elapsed="0.350830"/>
</kw>
<msg time="2024-03-12T20:54:17.701241" level="INFO">xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]</msg>
<msg time="2024-03-12T20:54:17.701241" level="FAIL">Element locator '//android.widget.TextView[@text="Inbox"]' did not match any elements after 30 seconds</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2024-03-12T20:53:47.140402" elapsed="30.560839">Element locator '//android.widget.TextView[@text="Inbox"]' did not match any elements after 30 seconds</status>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<arg>${element_locator}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="NOT RUN" start="2024-03-12T20:54:17.702238" elapsed="0.000000"/>
</kw>
<arg>${btn_inbox_page}</arg>
<status status="FAIL" start="2024-03-12T20:53:47.140402" elapsed="30.561836">Element locator '//android.widget.TextView[@text="Inbox"]' did not match any elements after 30 seconds</status>
</kw>
<kw name="Common - Click Element">
<arg>${btn_quick_add}</arg>
<status status="NOT RUN" start="2024-03-12T20:54:17.702238" elapsed="0.000000"/>
</kw>
<kw name="Common - Input Element">
<arg>${inp_task_name}</arg>
<arg>Day som doc sach</arg>
<status status="NOT RUN" start="2024-03-12T20:54:17.703236" elapsed="0.000000"/>
</kw>
<kw name="Common - Click Element">
<arg>${btn_choose_schedule}</arg>
<status status="NOT RUN" start="2024-03-12T20:54:17.703236" elapsed="0.000000"/>
</kw>
<kw name="Set Due Date">
<status status="NOT RUN" start="2024-03-12T20:54:17.703236" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2024-03-12T20:54:17.703236" elapsed="0.000000"/>
</kw>
<kw name="Common - Click Element">
<arg>${btn_submit_task}</arg>
<status status="NOT RUN" start="2024-03-12T20:54:17.703236" elapsed="0.000000"/>
</kw>
<kw name="Common - Press Back Button">
<status status="NOT RUN" start="2024-03-12T20:54:17.703236" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2024-03-12T20:53:47.139410" elapsed="30.563826">Element locator '//android.widget.TextView[@text="Inbox"]' did not match any elements after 30 seconds</status>
</kw>
<status status="FAIL" start="2024-03-12T20:53:21.995528" elapsed="55.708705">Element locator '//android.widget.TextView[@text="Inbox"]' did not match any elements after 30 seconds</status>
</test>
<test id="s1-t2" name="TC2-Mark_Done_Task" line="37">
<kw name="Open App Todoist">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://192.168.1.201:4723</arg>
<arg>platformName=Android</arg>
<arg>appium:appPackage=com.todoist</arg>
<arg>appium:appActivity=com.todoist.alias.HomeActivityDefault</arg>
<arg>appium:automationName=UiAutomator2</arg>
<arg>appium:noReset=false</arg>
<arg>appium:allowPermission=true</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/server-args.md
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2024-03-12T20:54:17.704233" elapsed="9.473902"/>
</kw>
<status status="PASS" start="2024-03-12T20:54:17.704233" elapsed="9.473902"/>
</kw>
<kw name="Signing With Email By Data">
<kw name="Common - Click Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:29.377978" level="INFO">criteria is com.todoist:id/more_sign_in_options</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:54:27.178135" elapsed="2.199843"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:29.379987" level="INFO">Clicking element 'com.todoist:id/more_sign_in_options'.</msg>
<msg time="2024-03-12T20:54:29.477548" level="INFO">criteria is com.todoist:id/more_sign_in_options</msg>
<arg>${element_locator}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:54:29.377978" elapsed="0.099570"/>
</kw>
<arg>${btn_more_signin_options}</arg>
<status status="PASS" start="2024-03-12T20:54:27.178135" elapsed="2.299413"/>
</kw>
<kw name="Common - Click Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:30.735075" level="INFO">criteria is com.todoist:id/email_login
criteria is com.todoist:id/email_login</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:54:29.477548" elapsed="1.257527"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:30.737068" level="INFO">Clicking element 'com.todoist:id/email_login'.</msg>
<msg time="2024-03-12T20:54:30.844034" level="INFO">criteria is com.todoist:id/email_login</msg>
<arg>${element_locator}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:54:30.735075" elapsed="0.108959"/>
</kw>
<arg>${btn_signin_by_email}</arg>
<status status="PASS" start="2024-03-12T20:54:29.477548" elapsed="1.366486"/>
</kw>
<kw name="Common - Input Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:32.600501" level="INFO">xpath criteria: //android.widget.EditText[@resource-id="email"]</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:54:30.845034" elapsed="1.755467"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:32.602500" level="INFO">Typing text 'duc.hoc.automation@gmail.com' into text field '//android.widget.EditText[@resource-id="email"]'</msg>
<msg time="2024-03-12T20:54:32.748317" level="INFO">xpath criteria: //android.widget.EditText[@resource-id="email"]</msg>
<arg>${element_locator}</arg>
<arg>${data_input}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:54:32.600501" elapsed="0.147816"/>
</kw>
<arg>${inp_signin_form_email}</arg>
<arg>${data_username}</arg>
<status status="PASS" start="2024-03-12T20:54:30.844034" elapsed="1.905281"/>
</kw>
<kw name="Common - Input Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:32.896407" level="INFO">xpath criteria: //android.widget.EditText[@resource-id="password"]</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:54:32.749315" elapsed="0.147092"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:32.897405" level="INFO">Typing text '123456zz' into text field '//android.widget.EditText[@resource-id="password"]'</msg>
<msg time="2024-03-12T20:54:33.019994" level="INFO">xpath criteria: //android.widget.EditText[@resource-id="password"]</msg>
<arg>${element_locator}</arg>
<arg>${data_input}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:54:32.896407" elapsed="0.123587"/>
</kw>
<arg>${inp_signin_form_password}</arg>
<arg>${data_password}</arg>
<status status="PASS" start="2024-03-12T20:54:32.749315" elapsed="0.271679"/>
</kw>
<kw name="Common - Click Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:33.190815" level="INFO">xpath criteria: //android.view.View[@resource-id="auth_button_tag"]</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:54:33.020994" elapsed="0.169821"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:33.191813" level="INFO">Clicking element '//android.view.View[@resource-id="auth_button_tag"]'.</msg>
<msg time="2024-03-12T20:54:33.359713" level="INFO">xpath criteria: //android.view.View[@resource-id="auth_button_tag"]</msg>
<arg>${element_locator}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:54:33.190815" elapsed="0.169893"/>
</kw>
<arg>${btn_signin}</arg>
<status status="PASS" start="2024-03-12T20:54:33.020994" elapsed="0.339714"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-12T20:54:38.361239" level="INFO">Slept 5 seconds.</msg>
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-12T20:54:33.360708" elapsed="5.000531"/>
</kw>
<kw name="Hide Keyboard" owner="AppiumLibrary">
<doc>Hides the software keyboard on the device. (optional) In iOS, use `key_name` to press
a particular key, ex. `Done`. In Android, no parameters are used.</doc>
<status status="PASS" start="2024-03-12T20:54:38.361239" elapsed="0.848235"/>
</kw>
<kw name="Common - Press Back Button">
<kw name="Press Keycode" owner="AppiumLibrary">
<arg>4</arg>
<doc>Sends a press of keycode to the device.</doc>
<status status="PASS" start="2024-03-12T20:54:39.210472" elapsed="0.356584"/>
</kw>
<status status="PASS" start="2024-03-12T20:54:39.209474" elapsed="0.358578"/>
</kw>
<arg>${user}</arg>
<arg>${password}</arg>
<status status="PASS" start="2024-03-12T20:54:27.178135" elapsed="12.389917"/>
</kw>
<kw name="Common - Click Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:44.490126" level="INFO">xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]
xpath criteria: //android.widget.TextView[@text="Inbox"]</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:54:39.568052" elapsed="4.922074"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:44.492120" level="INFO">Clicking element '//android.widget.TextView[@text="Inbox"]'.</msg>
<msg time="2024-03-12T20:54:45.310146" level="INFO">xpath criteria: //android.widget.TextView[@text="Inbox"]</msg>
<arg>${element_locator}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:54:44.490126" elapsed="0.820020"/>
</kw>
<arg>${btn_inbox_page}</arg>
<status status="PASS" start="2024-03-12T20:54:39.568052" elapsed="5.742094"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-12T20:54:46.311897" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-12T20:54:45.311146" elapsed="1.000751"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:46.472450" level="INFO">xpath criteria: //android.view.ViewGroup[@resource-id="com.todoist:id/toolbar"]/android.widget.TextView[@text="Inbox"]</msg>
<arg>${label_tab_inbox}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:54:46.311897" elapsed="0.160553"/>
</kw>
<kw name="Mark Done Task">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Get available Task On Current Screen">
<kw name="Get Webelements" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:46.627577" level="INFO">xpath criteria: //android.widget.TextView[@resource-id="com.todoist:id/text"]</msg>
<msg time="2024-03-12T20:54:46.627577" level="INFO">@{list_tasks} = [ &lt;appium.webdriver.webelement.WebElement (session="0c280436-0a92-4a4a-9ff2-d0abbe90adfe", element="00000000-0000-02d0-ffff-ffff000000f7")&gt; | &lt;appium.webdriver.webelement.WebElement (session="0c280436...</msg>
<var>@{list_tasks}</var>
<arg>${label_multi_tasks}</arg>
<doc>Returns list of [http://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement|WebElement] objects matching ``locator``.</doc>
<status status="PASS" start="2024-03-12T20:54:46.474445" elapsed="0.153132"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-03-12T20:54:46.627577" level="INFO">Length is 15.</msg>
<msg time="2024-03-12T20:54:46.627577" level="INFO">${len_list} = 15</msg>
<var>${len_list}</var>
<arg>${list_tasks}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-03-12T20:54:46.627577" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:47.017537" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[1]' text is 'Abc' </msg>
<msg time="2024-03-12T20:54:47.017537" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[1]</msg>
<msg time="2024-03-12T20:54:47.017537" level="INFO">${text_task_get_from_app} = Abc</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:46.629572" elapsed="0.387965"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:47.017537" level="FAIL">Abc != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:47.017537" elapsed="0.000000">Abc != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:47.018534" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:47.017537" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:47.018534" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:47.018534" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:47.018534" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:47.018534" elapsed="0.000000"/>
</if>
<var name="${MyItem}">1</var>
<status status="PASS" start="2024-03-12T20:54:46.629572" elapsed="0.388962"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:47.184727" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[2]' text is '32123' </msg>
<msg time="2024-03-12T20:54:47.184727" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[2]</msg>
<msg time="2024-03-12T20:54:47.184727" level="INFO">${text_task_get_from_app} = 32123</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:47.019534" elapsed="0.165193"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:47.185696" level="FAIL">32123 != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:47.184727" elapsed="0.000969">32123 != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:47.185696" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:47.184727" elapsed="0.000969"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:47.185696" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:47.185696" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:47.185696" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:47.185696" elapsed="0.000999"/>
</if>
<var name="${MyItem}">2</var>
<status status="PASS" start="2024-03-12T20:54:47.019534" elapsed="0.167161"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:47.328667" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[3]' text is '564654' </msg>
<msg time="2024-03-12T20:54:47.328667" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[3]</msg>
<msg time="2024-03-12T20:54:47.328667" level="INFO">${text_task_get_from_app} = 564654</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:47.186695" elapsed="0.141972"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:47.328667" level="FAIL">564654 != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:47.328667" elapsed="0.000000">564654 != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:47.328667" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:47.328667" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:47.329664" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:47.329664" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:47.329664" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:47.329664" elapsed="0.000000"/>
</if>
<var name="${MyItem}">3</var>
<status status="PASS" start="2024-03-12T20:54:47.186695" elapsed="0.142969"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:47.465648" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[4]' text is 'Day som doc sach' </msg>
<msg time="2024-03-12T20:54:47.465648" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[4]</msg>
<msg time="2024-03-12T20:54:47.465648" level="INFO">${text_task_get_from_app} = Day som doc sach</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:47.329664" elapsed="0.135984"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:47.466646" level="FAIL">Day som doc sach != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:47.465648" elapsed="0.000998">Day som doc sach != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:47.466646" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:47.465648" elapsed="0.000998"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:47.466646" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:47.466646" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:47.466646" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:47.466646" elapsed="0.000000"/>
</if>
<var name="${MyItem}">4</var>
<status status="PASS" start="2024-03-12T20:54:47.329664" elapsed="0.136982"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:47.596066" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[5]' text is 'Day som doc sach' </msg>
<msg time="2024-03-12T20:54:47.596066" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[5]</msg>
<msg time="2024-03-12T20:54:47.596066" level="INFO">${text_task_get_from_app} = Day som doc sach</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:47.466646" elapsed="0.129420"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:47.596066" level="FAIL">Day som doc sach != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:47.596066" elapsed="0.000000">Day som doc sach != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:47.596066" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:47.596066" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:47.597063" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:47.597063" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:47.596066" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:47.596066" elapsed="0.000997"/>
</if>
<var name="${MyItem}">5</var>
<status status="PASS" start="2024-03-12T20:54:47.466646" elapsed="0.130417"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:47.721114" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[6]' text is 'Day som doc sach' </msg>
<msg time="2024-03-12T20:54:47.721114" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[6]</msg>
<msg time="2024-03-12T20:54:47.721114" level="INFO">${text_task_get_from_app} = Day som doc sach</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:47.597063" elapsed="0.124051"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:47.722078" level="FAIL">Day som doc sach != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:47.722078" elapsed="0.000000">Day som doc sach != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:47.722078" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:47.722078" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:47.723076" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:47.723076" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:47.722078" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:47.722078" elapsed="0.000998"/>
</if>
<var name="${MyItem}">6</var>
<status status="PASS" start="2024-03-12T20:54:47.597063" elapsed="0.126013"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:47.835686" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[7]' text is 'Day som doc sach' </msg>
<msg time="2024-03-12T20:54:47.835686" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[7]</msg>
<msg time="2024-03-12T20:54:47.835686" level="INFO">${text_task_get_from_app} = Day som doc sach</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:47.723076" elapsed="0.112610"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:47.836684" level="FAIL">Day som doc sach != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:47.836684" elapsed="0.000000">Day som doc sach != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:47.836684" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:47.836684" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:47.836684" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:47.836684" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:47.836684" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:47.836684" elapsed="0.000000"/>
</if>
<var name="${MyItem}">7</var>
<status status="PASS" start="2024-03-12T20:54:47.723076" elapsed="0.113608"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:47.936925" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[8]' text is 'Di sieu thi' </msg>
<msg time="2024-03-12T20:54:47.936925" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[8]</msg>
<msg time="2024-03-12T20:54:47.936925" level="INFO">${text_task_get_from_app} = Di sieu thi</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:47.837680" elapsed="0.099245"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:47.937949" level="FAIL">Di sieu thi != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:47.937949" elapsed="0.000000">Di sieu thi != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:47.937949" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:47.936925" elapsed="0.001024"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:47.937949" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:47.937949" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:47.937949" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:47.937949" elapsed="0.000000"/>
</if>
<var name="${MyItem}">8</var>
<status status="PASS" start="2024-03-12T20:54:47.837680" elapsed="0.100269"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:48.039808" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[9]' text is 'Di nha sach' </msg>
<msg time="2024-03-12T20:54:48.039808" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[9]</msg>
<msg time="2024-03-12T20:54:48.039808" level="INFO">${text_task_get_from_app} = Di nha sach</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:47.937949" elapsed="0.101859"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:48.039808" level="FAIL">Di nha sach != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:48.039808" elapsed="0.000000">Di nha sach != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:48.040805" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:48.039808" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:48.040805" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:48.040805" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:48.040805" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:48.040805" elapsed="0.000000"/>
</if>
<var name="${MyItem}">9</var>
<status status="PASS" start="2024-03-12T20:54:47.937949" elapsed="0.102856"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:48.167500" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[10]' text is 'Di cho mua do an' </msg>
<msg time="2024-03-12T20:54:48.168496" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[10]</msg>
<msg time="2024-03-12T20:54:48.168496" level="INFO">${text_task_get_from_app} = Di cho mua do an</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:48.040805" elapsed="0.127691"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:48.169495" level="FAIL">Di cho mua do an != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:48.168496" elapsed="0.000999">Di cho mua do an != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:48.169495" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:48.168496" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:48.169495" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:48.169495" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:48.169495" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:48.169495" elapsed="0.000000"/>
</if>
<var name="${MyItem}">10</var>
<status status="PASS" start="2024-03-12T20:54:48.040805" elapsed="0.128690"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:48.281138" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[11]' text is 'Tap the duc' </msg>
<msg time="2024-03-12T20:54:48.281138" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[11]</msg>
<msg time="2024-03-12T20:54:48.282161" level="INFO">${text_task_get_from_app} = Tap the duc</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:48.169495" elapsed="0.112666"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:48.282161" level="FAIL">Tap the duc != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:48.282161" elapsed="0.000000">Tap the duc != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:48.282161" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:48.282161" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:48.282161" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:48.282161" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:48.282161" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:48.282161" elapsed="0.000998"/>
</if>
<var name="${MyItem}">11</var>
<status status="PASS" start="2024-03-12T20:54:48.169495" elapsed="0.113664"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:48.396434" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[12]' text is 'Dat cho di dao' </msg>
<msg time="2024-03-12T20:54:48.396434" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[12]</msg>
<msg time="2024-03-12T20:54:48.396434" level="INFO">${text_task_get_from_app} = Dat cho di dao</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:48.283159" elapsed="0.113275"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:48.397430" level="FAIL">Dat cho di dao != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:48.397430" elapsed="0.000000">Dat cho di dao != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:48.397430" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:48.397430" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:48.397430" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:48.397430" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:48.397430" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:48.397430" elapsed="0.000000"/>
</if>
<var name="${MyItem}">12</var>
<status status="PASS" start="2024-03-12T20:54:48.283159" elapsed="0.114271"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:48.521759" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[13]' text is 'Di kham benh dinh ky' </msg>
<msg time="2024-03-12T20:54:48.521759" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[13]</msg>
<msg time="2024-03-12T20:54:48.521759" level="INFO">${text_task_get_from_app} = Di kham benh dinh ky</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:48.398428" elapsed="0.123331"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:48.522754" level="FAIL">Di kham benh dinh ky != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:48.521759" elapsed="0.000995">Di kham benh dinh ky != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:48.522754" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:48.521759" elapsed="0.000995"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:48.522754" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:48.522754" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:48.522754" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:48.522754" elapsed="0.000000"/>
</if>
<var name="${MyItem}">13</var>
<status status="PASS" start="2024-03-12T20:54:48.398428" elapsed="0.124326"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:48.627839" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[14]' text is 'Den cong ty lam viec' </msg>
<msg time="2024-03-12T20:54:48.627839" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[14]</msg>
<msg time="2024-03-12T20:54:48.627839" level="INFO">${text_task_get_from_app} = Den cong ty lam viec</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:48.522754" elapsed="0.105085"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:48.628836" level="FAIL">Den cong ty lam viec != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:48.627839" elapsed="0.000997">Den cong ty lam viec != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:48.628836" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:48.627839" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:48.628836" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:48.628836" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:48.628836" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:48.628836" elapsed="0.000000"/>
</if>
<var name="${MyItem}">14</var>
<status status="PASS" start="2024-03-12T20:54:48.522754" elapsed="0.106082"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:48.760492" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[15]' text is 'Di da bong' </msg>
<msg time="2024-03-12T20:54:48.760492" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[15]</msg>
<msg time="2024-03-12T20:54:48.761489" level="INFO">${text_task_get_from_app} = Di da bong</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:48.628836" elapsed="0.132653"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:48.761489" level="FAIL">Di da bong != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:48.761489" elapsed="0.000000">Di da bong != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:48.761489" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:48.761489" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:48.761489" elapsed="0.000997"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:48.762486" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:48.761489" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:48.761489" elapsed="0.000997"/>
</if>
<var name="${MyItem}">15</var>
<status status="PASS" start="2024-03-12T20:54:48.628836" elapsed="0.133650"/>
</iter>
<var>${MyItem}</var>
<value>${1}</value>
<value>${len_list + 1}</value>
<status status="PASS" start="2024-03-12T20:54:46.628575" elapsed="2.133911"/>
</for>
<if>
<branch type="IF" condition="not ${check_tasks}">
<kw name="Swipe By Percent" owner="AppiumLibrary">
<arg>50</arg>
<arg>80</arg>
<arg>50</arg>
<arg>20</arg>
<arg>duration=300</arg>
<doc>Swipe from one percent of the screen to another percent, for an optional duration.
Normal swipe fails to scale for different screen resolutions, this can be avoided using percent.</doc>
<status status="PASS" start="2024-03-12T20:54:48.762486" elapsed="0.709601"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-03-12T20:54:54.472649" level="INFO">Slept 5 seconds.</msg>
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-03-12T20:54:49.472087" elapsed="5.000562"/>
</kw>
<status status="PASS" start="2024-03-12T20:54:48.762486" elapsed="5.710163"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:48.762486" elapsed="5.710163"/>
</if>
<kw name="Should Be True" owner="BuiltIn">
<msg time="2024-03-12T20:54:54.472649" level="FAIL">'False' should be true.</msg>
<arg>${check_tasks}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="FAIL" start="2024-03-12T20:54:54.472649" elapsed="0.000000">'False' should be true.</status>
</kw>
<arg>${task_need_mark_done}</arg>
<status status="FAIL" start="2024-03-12T20:54:46.474445" elapsed="7.998204">'False' should be true.</status>
</kw>
<kw name="Get available Task On Current Screen">
<kw name="Get Webelements" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:55.576288" level="INFO">xpath criteria: //android.widget.TextView[@resource-id="com.todoist:id/text"]</msg>
<msg time="2024-03-12T20:54:55.576288" level="INFO">@{list_tasks} = [ &lt;appium.webdriver.webelement.WebElement (session="0c280436-0a92-4a4a-9ff2-d0abbe90adfe", element="00000000-0000-02d0-ffff-ffff000001b5")&gt; | &lt;appium.webdriver.webelement.WebElement (session="0c280436...</msg>
<var>@{list_tasks}</var>
<arg>${label_multi_tasks}</arg>
<doc>Returns list of [http://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webelement|WebElement] objects matching ``locator``.</doc>
<status status="PASS" start="2024-03-12T20:54:55.472945" elapsed="0.103343"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-03-12T20:54:55.577314" level="INFO">Length is 12.</msg>
<msg time="2024-03-12T20:54:55.577314" level="INFO">${len_list} = 12</msg>
<var>${len_list}</var>
<arg>${list_tasks}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-03-12T20:54:55.576288" elapsed="0.001026"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:55.686952" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[1]' text is 'Tap the duc' </msg>
<msg time="2024-03-12T20:54:55.686952" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[1]</msg>
<msg time="2024-03-12T20:54:55.686952" level="INFO">${text_task_get_from_app} = Tap the duc</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:55.578311" elapsed="0.108641"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:55.687949" level="FAIL">Tap the duc != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:55.686952" elapsed="0.000997">Tap the duc != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:55.687949" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:55.686952" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:55.687949" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:55.687949" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:55.687949" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:55.687949" elapsed="0.000000"/>
</if>
<var name="${MyItem}">1</var>
<status status="PASS" start="2024-03-12T20:54:55.578311" elapsed="0.109638"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:55.803324" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[2]' text is 'Dat cho di dao' </msg>
<msg time="2024-03-12T20:54:55.803324" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[2]</msg>
<msg time="2024-03-12T20:54:55.803324" level="INFO">${text_task_get_from_app} = Dat cho di dao</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:55.687949" elapsed="0.115375"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:55.804321" level="FAIL">Dat cho di dao != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:55.803324" elapsed="0.000997">Dat cho di dao != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:55.804321" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:55.803324" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:55.804321" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:55.804321" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:55.804321" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:55.804321" elapsed="0.000000"/>
</if>
<var name="${MyItem}">2</var>
<status status="PASS" start="2024-03-12T20:54:55.687949" elapsed="0.116372"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:55.938007" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[3]' text is 'Di kham benh dinh ky' </msg>
<msg time="2024-03-12T20:54:55.938007" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[3]</msg>
<msg time="2024-03-12T20:54:55.938007" level="INFO">${text_task_get_from_app} = Di kham benh dinh ky</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:55.804321" elapsed="0.133686"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:55.939004" level="FAIL">Di kham benh dinh ky != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:55.939004" elapsed="0.000000">Di kham benh dinh ky != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:55.939004" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:55.938007" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:55.939004" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:55.939004" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:55.939004" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:55.939004" elapsed="0.000000"/>
</if>
<var name="${MyItem}">3</var>
<status status="PASS" start="2024-03-12T20:54:55.804321" elapsed="0.134683"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:56.058334" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[4]' text is 'Den cong ty lam viec' </msg>
<msg time="2024-03-12T20:54:56.058334" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[4]</msg>
<msg time="2024-03-12T20:54:56.058334" level="INFO">${text_task_get_from_app} = Den cong ty lam viec</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:55.940001" elapsed="0.118333"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:56.059332" level="FAIL">Den cong ty lam viec != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:56.059332" elapsed="0.000000">Den cong ty lam viec != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:56.059332" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:56.059332" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:56.059332" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:56.060329" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:56.059332" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:56.059332" elapsed="0.000997"/>
</if>
<var name="${MyItem}">4</var>
<status status="PASS" start="2024-03-12T20:54:55.939004" elapsed="0.121325"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:56.172037" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[5]' text is 'Di da bong' </msg>
<msg time="2024-03-12T20:54:56.172037" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[5]</msg>
<msg time="2024-03-12T20:54:56.172037" level="INFO">${text_task_get_from_app} = Di da bong</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:56.060329" elapsed="0.111708"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:56.172037" level="FAIL">Di da bong != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:56.172037" elapsed="0.000000">Di da bong != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:56.173033" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:56.172037" elapsed="0.000996"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:56.173033" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:56.173033" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:56.173033" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:56.173033" elapsed="0.000000"/>
</if>
<var name="${MyItem}">5</var>
<status status="PASS" start="2024-03-12T20:54:56.060329" elapsed="0.112704"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:56.275758" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[6]' text is 'Di dap vit' </msg>
<msg time="2024-03-12T20:54:56.275758" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[6]</msg>
<msg time="2024-03-12T20:54:56.275758" level="INFO">${text_task_get_from_app} = Di dap vit</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:56.174031" elapsed="0.101727"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:56.275758" level="FAIL">Di dap vit != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:56.275758" elapsed="0.000000">Di dap vit != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:56.276756" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:56.275758" elapsed="0.000998"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:56.276756" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:56.276756" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:56.276756" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:56.276756" elapsed="0.000000"/>
</if>
<var name="${MyItem}">6</var>
<status status="PASS" start="2024-03-12T20:54:56.174031" elapsed="0.102725"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:56.392892" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[7]' text is 'Di to tuong' </msg>
<msg time="2024-03-12T20:54:56.392892" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[7]</msg>
<msg time="2024-03-12T20:54:56.392892" level="INFO">${text_task_get_from_app} = Di to tuong</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:56.276756" elapsed="0.116136"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:56.393887" level="FAIL">Di to tuong != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:56.393887" elapsed="0.000000">Di to tuong != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:56.393887" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:56.393887" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:56.393887" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:56.393887" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:56.393887" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:56.393887" elapsed="0.000000"/>
</if>
<var name="${MyItem}">7</var>
<status status="PASS" start="2024-03-12T20:54:56.276756" elapsed="0.117131"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:56.495386" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[8]' text is 'Day som doc sach' </msg>
<msg time="2024-03-12T20:54:56.495386" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[8]</msg>
<msg time="2024-03-12T20:54:56.495386" level="INFO">${text_task_get_from_app} = Day som doc sach</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:56.394884" elapsed="0.100502"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:56.495386" level="FAIL">Day som doc sach != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:56.495386" elapsed="0.000000">Day som doc sach != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:56.495386" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:56.495386" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:56.496384" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:56.496384" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:56.495386" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:56.495386" elapsed="0.000998"/>
</if>
<var name="${MyItem}">8</var>
<status status="PASS" start="2024-03-12T20:54:56.393887" elapsed="0.102497"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:56.595181" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[9]' text is 'Day som doc sach' </msg>
<msg time="2024-03-12T20:54:56.595181" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[9]</msg>
<msg time="2024-03-12T20:54:56.595181" level="INFO">${text_task_get_from_app} = Day som doc sach</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:56.496384" elapsed="0.098797"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:56.595181" level="FAIL">Day som doc sach != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:56.595181" elapsed="0.000000">Day som doc sach != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:56.595181" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:56.595181" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:56.596179" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:56.596179" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:56.596179" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:56.596179" elapsed="0.000000"/>
</if>
<var name="${MyItem}">9</var>
<status status="PASS" start="2024-03-12T20:54:56.496384" elapsed="0.099795"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:56.693456" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[10]' text is 'Day som doc sach' </msg>
<msg time="2024-03-12T20:54:56.693456" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[10]</msg>
<msg time="2024-03-12T20:54:56.693456" level="INFO">${text_task_get_from_app} = Day som doc sach</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:56.596179" elapsed="0.097277"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:56.694451" level="FAIL">Day som doc sach != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:56.694451" elapsed="0.000000">Day som doc sach != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:56.694451" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:56.694451" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:56.695450" elapsed="0.000000"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:56.695450" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:56.694451" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:56.694451" elapsed="0.000999"/>
</if>
<var name="${MyItem}">10</var>
<status status="PASS" start="2024-03-12T20:54:56.596179" elapsed="0.099271"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:56.806616" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[11]' text is 'Day som doc sach' </msg>
<msg time="2024-03-12T20:54:56.806616" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[11]</msg>
<msg time="2024-03-12T20:54:56.806616" level="INFO">${text_task_get_from_app} = Day som doc sach</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:56.695450" elapsed="0.111166"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<msg time="2024-03-12T20:54:56.807613" level="FAIL">Day som doc sach != Choi bong ban</msg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="FAIL" start="2024-03-12T20:54:56.806616" elapsed="0.000997">Day som doc sach != Choi bong ban</status>
</kw>
<msg time="2024-03-12T20:54:56.807964" level="INFO">${check_tasks} = False</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:56.806616" elapsed="0.001348"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="NOT RUN" start="2024-03-12T20:54:56.807964" elapsed="0.000510"/>
</kw>
<break>
<status status="NOT RUN" start="2024-03-12T20:54:56.808474" elapsed="0.000000"/>
</break>
<status status="NOT RUN" start="2024-03-12T20:54:56.807964" elapsed="0.000510"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:56.807964" elapsed="0.000510"/>
</if>
<var name="${MyItem}">11</var>
<status status="PASS" start="2024-03-12T20:54:56.695450" elapsed="0.113024"/>
</iter>
<iter>
<kw name="Get Text" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:56.905545" level="INFO">Element 'xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[12]' text is 'Choi bong ban' </msg>
<msg time="2024-03-12T20:54:56.905545" level="INFO">xpath criteria: (//android.widget.TextView[@resource-id="com.todoist:id/text"])[12]</msg>
<msg time="2024-03-12T20:54:56.905545" level="INFO">${text_task_get_from_app} = Choi bong ban</msg>
<var>${text_task_get_from_app}</var>
<arg>xpath=(//android.widget.TextView[@resource-id="com.todoist:id/text"])[${MyItem}]</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="PASS" start="2024-03-12T20:54:56.808474" elapsed="0.097071"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-03-12T20:54:56.905545" elapsed="0.000000"/>
</kw>
<msg time="2024-03-12T20:54:56.905545" level="INFO">${check_tasks} = True</msg>
<var>${check_tasks}</var>
<arg>should be equal</arg>
<arg>${text_task_get_from_app}</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-03-12T20:54:56.905545" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${check_tasks}">
<kw name="Common - Click Element">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:57.007686" level="INFO">xpath criteria: (//android.widget.CheckBox[@content-desc="Complete"])[12]</msg>
<arg>${element_locator}</arg>
<arg>${var_timeout_30s}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2024-03-12T20:54:56.906542" elapsed="0.101144"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2024-03-12T20:54:57.009681" level="INFO">Clicking element 'xpath=(//android.widget.CheckBox[@content-desc="Complete"])[12]'.</msg>
<msg time="2024-03-12T20:54:58.097205" level="INFO">xpath criteria: (//android.widget.CheckBox[@content-desc="Complete"])[12]</msg>
<arg>${element_locator}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2024-03-12T20:54:57.007686" elapsed="1.089519"/>
</kw>
<arg>xpath=(//android.widget.CheckBox[@content-desc="Complete"])[${MyItem}]</arg>
<status status="PASS" start="2024-03-12T20:54:56.906542" elapsed="1.190663"/>
</kw>
<break>
<status status="PASS" start="2024-03-12T20:54:58.097205" elapsed="0.000000"/>
</break>
<status status="PASS" start="2024-03-12T20:54:56.905545" elapsed="1.191660"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:56.905545" elapsed="1.191660"/>
</if>
<var name="${MyItem}">12</var>
<status status="PASS" start="2024-03-12T20:54:56.808474" elapsed="1.288731"/>
</iter>
<var>${MyItem}</var>
<value>${1}</value>
<value>${len_list + 1}</value>
<status status="PASS" start="2024-03-12T20:54:55.577314" elapsed="2.519891"/>
</for>
<if>
<branch type="IF" condition="not ${check_tasks}">
<kw name="Swipe By Percent" owner="AppiumLibrary">
<arg>50</arg>
<arg>80</arg>
<arg>50</arg>
<arg>20</arg>
<arg>duration=300</arg>
<doc>Swipe from one percent of the screen to another percent, for an optional duration.
Normal swipe fails to scale for different screen resolutions, this can be avoided using percent.</doc>
<status status="NOT RUN" start="2024-03-12T20:54:58.098202" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2024-03-12T20:54:58.098202" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-03-12T20:54:58.097205" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-03-12T20:54:58.097205" elapsed="0.000997"/>
</if>
<kw name="Should Be True" owner="BuiltIn">
<arg>${check_tasks}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2024-03-12T20:54:58.098202" elapsed="0.000000"/>
</kw>
<arg>${task_need_mark_done}</arg>
<status status="PASS" start="2024-03-12T20:54:55.472945" elapsed="2.625257"/>
</kw>
<arg>3x</arg>
<arg>1s</arg>
<arg>Get available Task On Current Screen</arg>
<arg>${task_need_mark_done}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-03-12T20:54:46.473448" elapsed="11.624754"/>
</kw>
<arg>Choi bong ban</arg>
<status status="PASS" start="2024-03-12T20:54:46.473448" elapsed="11.624754"/>
</kw>
<status status="PASS" start="2024-03-12T20:54:17.704233" elapsed="40.393969"/>
</test>
<status status="FAIL" start="2024-03-12T20:53:21.774420" elapsed="96.324808"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="1" skip="0" id="s1" name="Run Full">Run Full</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
